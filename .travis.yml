dist: xenial
language: python
os: linux

services:
- docker

python:
- 3.5
- 3.6
- 3.7
- 3.8
- 3.8-dev

node_js:
- 5

go:
- 1.12

env:
- SINGVER=3.4.2  # the version of docker2singularity used below should match this one

before_install:
- sudo apt-get update -qq
- sudo apt-get install -y -qq python dh-autoreconf squashfs-tools build-essential libarchive-dev
- npm install jsonlint -g 
- docker build -t boutiques/example1:test ./tools/python/boutiques/schema/examples/example1
- docker run -v /var/run/docker.sock:/var/run/docker.sock -v ${HOME}:/output --privileged -t --rm singularityware/docker2singularity:v3.4.0 boutiques/example1:test
- IMGNAME=$(ls $HOME/boutiques_example1_test*.simg)
- wget https://github.com/sylabs/singularity/releases/download/v$SINGVER/singularity-$SINGVER.tar.gz
- tar xvf singularity-$SINGVER.tar.gz
- cd singularity
- ./mconfig --prefix=/usr/local --sysconfdir=/etc
- make -C ./builddir
- sudo make -C ./builddir install
- singularity --version
- cat /etc/singularity/singularity.conf
- cd ${TRAVIS_BUILD_DIR}/tools/python/
- mv ${IMGNAME} ./boutiques-example1-test.simg

install:
- pip install --upgrade setuptools
- pip install "jsonschema>=2.6.0,<3.0.0"
- pip install pytest pytest-runner pycodestyle coveralls
- pip install .
- pip freeze

script:
- pycodestyle --max-line-length=80 boutiques/*.py boutiques/tests/*.py
- jsonlint -q boutiques/schema/descriptor.schema.json
- echo "Parallel tests:"
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_bids.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_bosh.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_crash_python3.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_deprecate.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_evaluate.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_example.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_example_flag.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_exec.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_export.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_import.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_invocation.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_logger.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_pprint.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_prepare.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_publisher.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_pull.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_pythoninterface.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_requires_group.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_search.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_simulate.py & 
    coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_validator.py & 
    wait
- echo "Sequential tests:"
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_creator.py
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_data_collection.py
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_data_handler.py
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_example1.py
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_example2.py
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_example3.py
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_output_files.py
- coverage run --source=boutiques --parallel-mode -m pytest boutiques/tests/test_test.py
- coverage combine
- coverage report -m --omit=*virtualenv*

after_success:
- coveralls

deploy:
