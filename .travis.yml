dist: xenial
language: python
os: linux

services:
- docker

python:
- 3.5
- 3.6
- 3.7
- 3.8
- 3.8-dev

node_js:
- 5

go:
- 1.12

env:
- SINGVER=3.4.2  # the version of docker2singularity used below should match this one
- COVERALLS_PARALLEL=true #coveralls

before_install:
- sudo apt-get update -qq
- sudo apt-get install -y -qq python dh-autoreconf squashfs-tools build-essential libarchive-dev
- npm install jsonlint -g 
- docker build -t boutiques/example1:test ./tools/python/boutiques/schema/examples/example1
- docker run -v /var/run/docker.sock:/var/run/docker.sock -v ${HOME}:/output --privileged -t --rm singularityware/docker2singularity:v3.4.0 boutiques/example1:test
- IMGNAME=$(ls $HOME/boutiques_example1_test*.simg)
- wget https://github.com/sylabs/singularity/releases/download/v$SINGVER/singularity-$SINGVER.tar.gz
- tar xvf singularity-$SINGVER.tar.gz
- cd singularity
- ./mconfig --prefix=/usr/local --sysconfdir=/etc
- make -C ./builddir
- sudo make -C ./builddir install
- singularity --version
- cat /etc/singularity/singularity.conf
- cd ${TRAVIS_BUILD_DIR}/tools/python/
- mv ${IMGNAME} ./boutiques-example1-test.simg

install:
- pip install --upgrade setuptools
- pip install "jsonschema>=2.6.0,<3.0.0"
- pip install pytest pytest-runner pycodestyle coveralls pytest-xdist
- pip install .
- pip freeze

script:
- pycodestyle --max-line-length=80 boutiques/*.py boutiques/tests/*.py
- jsonlint -q boutiques/schema/descriptor.schema.json
- coverage run --source boutiques setup.py pytest -n 12 -k "test_bids or test_bosh or test_creash_python3 or test_deprecate or test_evaluate or test_exec or test_export or test_import or test_invocation or test_logger or test_pprint or test_prepare or test_publisher or test_pull or test_pythoninterface or test_requires_group or test_search or test_simulate or test_validator"
- coverage run --source boutiques setup.py pytest "test_creator or test_data_collection or test_data_handler or test_example or test_output_files or test_test"
- coverage report -m

after_success:
- coveralls

deploy:
